// <auto-generated />
using System;
using Koora_Server;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Koora_Server.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Koora_Server.Models.AppUsers", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(25)")
                        .HasMaxLength(25);

                    b.Property<byte[]>("password")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("passwordSalt")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("prenom")
                        .IsRequired()
                        .HasColumnType("nvarchar(25)")
                        .HasMaxLength(25);

                    b.Property<int?>("rolesid")
                        .HasColumnType("int");

                    b.Property<string>("userName")
                        .IsRequired()
                        .HasColumnType("nvarchar(25)")
                        .HasMaxLength(25);

                    b.HasKey("id");

                    b.HasIndex("rolesid");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Koora_Server.Models.Categorie", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("cat_Nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(35)")
                        .HasMaxLength(35);

                    b.HasKey("id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("Koora_Server.Models.Champions", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Champions");
                });

            modelBuilder.Entity("Koora_Server.Models.CollectionTeam", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("championsid")
                        .HasColumnType("int");

                    b.Property<int>("point")
                        .HasColumnType("int");

                    b.Property<int?>("teamid")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("championsid");

                    b.HasIndex("teamid");

                    b.ToTable("collectionTeams");
                });

            modelBuilder.Entity("Koora_Server.Models.Commentaire", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("commentaire")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<DateTime>("date_Cmt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("newsid")
                        .HasColumnType("int");

                    b.Property<int>("pos")
                        .HasColumnType("int");

                    b.Property<int?>("usersid")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("newsid");

                    b.HasIndex("usersid");

                    b.ToTable("Commentaires");
                });

            modelBuilder.Entity("Koora_Server.Models.Contry", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.HasKey("id");

                    b.ToTable("Contry");
                });

            modelBuilder.Entity("Koora_Server.Models.Goal", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("matchid")
                        .HasColumnType("int");

                    b.Property<int>("minute")
                        .HasColumnType("int");

                    b.Property<int?>("playersid")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("matchid");

                    b.HasIndex("playersid");

                    b.ToTable("Goals");
                });

            modelBuilder.Entity("Koora_Server.Models.Match", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("championsid")
                        .HasColumnType("int");

                    b.Property<DateTime>("date_Match")
                        .HasColumnType("datetime2");

                    b.Property<int>("etat")
                        .HasColumnType("int");

                    b.Property<int>("res_TeamAller")
                        .HasColumnType("int");

                    b.Property<int>("res_TeamRetour")
                        .HasColumnType("int");

                    b.Property<string>("stade")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("team_Allerid")
                        .HasColumnType("int");

                    b.Property<int?>("team_Retourid")
                        .HasColumnType("int");

                    b.Property<string>("type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("championsid");

                    b.HasIndex("team_Allerid");

                    b.HasIndex("team_Retourid");

                    b.ToTable("Matches");
                });

            modelBuilder.Entity("Koora_Server.Models.Match_TV", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("matchid")
                        .HasColumnType("int");

                    b.Property<int?>("tvid")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("matchid");

                    b.HasIndex("tvid");

                    b.ToTable("Match_TV");
                });

            modelBuilder.Entity("Koora_Server.Models.Message", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("date_Poste")
                        .HasColumnType("datetime2");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("etat")
                        .HasColumnType("int");

                    b.Property<string>("message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("Koora_Server.Models.News", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("GetCategoriesid")
                        .HasColumnType("int");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Titre")
                        .IsRequired()
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<DateTime>("date_Publiciter")
                        .HasColumnType("datetime2");

                    b.HasKey("id");

                    b.HasIndex("GetCategoriesid");

                    b.ToTable("News");
                });

            modelBuilder.Entity("Koora_Server.Models.Players", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Firstname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("about")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("date_Nais")
                        .HasColumnType("datetime2");

                    b.Property<string>("image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nationality")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("nombre")
                        .HasColumnType("int");

                    b.Property<string>("poste")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("teamid")
                        .HasColumnType("int");

                    b.Property<string>("vote")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("teamid");

                    b.ToTable("Players");
                });

            modelBuilder.Entity("Koora_Server.Models.ReponseCommentaire", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("commentaireid")
                        .HasColumnType("int");

                    b.Property<DateTime>("dateReponse")
                        .HasColumnType("datetime2");

                    b.Property<string>("reponse")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("usersid")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("commentaireid");

                    b.HasIndex("usersid");

                    b.ToTable("reponseCommentaires");
                });

            modelBuilder.Entity("Koora_Server.Models.Roles", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("roleName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("Koora_Server.Models.Team", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Categorieid")
                        .HasColumnType("int");

                    b.Property<int?>("contryid")
                        .HasColumnType("int");

                    b.Property<string>("logo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nom")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("Categorieid");

                    b.HasIndex("contryid");

                    b.ToTable("Teams");
                });

            modelBuilder.Entity("Koora_Server.Models.Tv", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("logo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nom")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Tvs");
                });

            modelBuilder.Entity("Koora_Server.Models.AppUsers", b =>
                {
                    b.HasOne("Koora_Server.Models.Roles", "roles")
                        .WithMany("users")
                        .HasForeignKey("rolesid");
                });

            modelBuilder.Entity("Koora_Server.Models.CollectionTeam", b =>
                {
                    b.HasOne("Koora_Server.Models.Champions", "champions")
                        .WithMany("teams")
                        .HasForeignKey("championsid");

                    b.HasOne("Koora_Server.Models.Team", "team")
                        .WithMany("champions")
                        .HasForeignKey("teamid");
                });

            modelBuilder.Entity("Koora_Server.Models.Commentaire", b =>
                {
                    b.HasOne("Koora_Server.Models.News", "news")
                        .WithMany("commentaires")
                        .HasForeignKey("newsid");

                    b.HasOne("Koora_Server.Models.AppUsers", "users")
                        .WithMany("commentaires")
                        .HasForeignKey("usersid");
                });

            modelBuilder.Entity("Koora_Server.Models.Goal", b =>
                {
                    b.HasOne("Koora_Server.Models.Match", "match")
                        .WithMany("goals")
                        .HasForeignKey("matchid");

                    b.HasOne("Koora_Server.Models.Players", "players")
                        .WithMany("goals")
                        .HasForeignKey("playersid");
                });

            modelBuilder.Entity("Koora_Server.Models.Match", b =>
                {
                    b.HasOne("Koora_Server.Models.Champions", "champions")
                        .WithMany("matches")
                        .HasForeignKey("championsid");

                    b.HasOne("Koora_Server.Models.Team", "team_Aller")
                        .WithMany("matches_Retour")
                        .HasForeignKey("team_Allerid");

                    b.HasOne("Koora_Server.Models.Team", "team_Retour")
                        .WithMany("matches_Aller")
                        .HasForeignKey("team_Retourid");
                });

            modelBuilder.Entity("Koora_Server.Models.Match_TV", b =>
                {
                    b.HasOne("Koora_Server.Models.Match", "match")
                        .WithMany("match_TVs")
                        .HasForeignKey("matchid");

                    b.HasOne("Koora_Server.Models.Tv", "tv")
                        .WithMany("match_TVs")
                        .HasForeignKey("tvid");
                });

            modelBuilder.Entity("Koora_Server.Models.News", b =>
                {
                    b.HasOne("Koora_Server.Models.Categorie", "GetCategories")
                        .WithMany("News")
                        .HasForeignKey("GetCategoriesid");
                });

            modelBuilder.Entity("Koora_Server.Models.Players", b =>
                {
                    b.HasOne("Koora_Server.Models.Team", "team")
                        .WithMany("players")
                        .HasForeignKey("teamid");
                });

            modelBuilder.Entity("Koora_Server.Models.ReponseCommentaire", b =>
                {
                    b.HasOne("Koora_Server.Models.Commentaire", "commentaire")
                        .WithMany("reponseCommentaires")
                        .HasForeignKey("commentaireid");

                    b.HasOne("Koora_Server.Models.AppUsers", "users")
                        .WithMany("reponseCommentaires")
                        .HasForeignKey("usersid");
                });

            modelBuilder.Entity("Koora_Server.Models.Team", b =>
                {
                    b.HasOne("Koora_Server.Models.Categorie", "Categorie")
                        .WithMany("Teams")
                        .HasForeignKey("Categorieid");

                    b.HasOne("Koora_Server.Models.Contry", "contry")
                        .WithMany("teams")
                        .HasForeignKey("contryid");
                });
#pragma warning restore 612, 618
        }
    }
}
